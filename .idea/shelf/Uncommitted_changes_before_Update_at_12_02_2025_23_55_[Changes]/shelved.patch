Index: model/PatronCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model; //in model folder\r\n\r\n// project imports (just copied from account collection, no idea what these do)\r\nimport java.util.Properties;\r\nimport java.util.Vector;\r\n//import javafx.scene.Scene;\r\nimport exception.InvalidPrimaryKeyException;\r\nimport event.Event;\r\nimport database.*;\r\nimport impresario.IView;\r\n//import userinterface.View;\r\n//import userinterface.ViewFactory;\r\n\r\n\r\npublic abstract class PatronCollection extends EntityBase\r\n{\r\n    private static final String myTableName = \"Patron\"; //establish database table name\r\n\r\n    private Vector<Patron> PatronList; //create booklist\r\n\r\n    public PatronCollection() {\r\n        //super(myTableName); //saw this in account collection, looked important\r\n        patronList = new Vector<Patron>(); //constructor\r\n    }\r\n\r\n\r\n    public Vector<Patron> findPatronsOlderThanDate(String date) {\r\n        // SQL Implementation here\r\n        String query = (\"SELECT * FROM \" + myTableName + \" WHERE (dateOfBirth < '\" + date +\"')\"); //query to find the books older than given date\r\n        Vector allDataRetrieved = getSelectQueryResult(query);\r\n\r\n        if (allDataRetrieved != null) //iterting through result of table query to add to new vector\r\n        {\r\n            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++)\r\n            {\r\n                Properties nextPatron= (Properties)allDataRetrieved.elementAt(cnt); //properties inhereted from Entitybase\r\n\r\n                patronList.add(new Patron(nextPatron));//update new booklist\r\n            }\r\n        }\r\n        return patronList;\r\n    }\r\n\r\n\r\n    public Vector<Patron> findPatronsYoungerThan(String date) {\r\n        // SQL Implementation here\r\n        String query = (\"SELECT * FROM \" + myTableName + \" WHERE (dateOfBirth > '\" + date +\"')\"); //query to find the books older than given date\r\n        Vector allDataRetrieved = getSelectQueryResult(query);\r\n\r\n        if (allDataRetrieved != null) //iterting through result of table query to add to new vector\r\n        {\r\n            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++)\r\n            {\r\n                Properties nextPatron= (Properties)allDataRetrieved.elementAt(cnt); //properties inhereted from Entitybase\r\n                patronList.add(new Patron(nextPatron));//update new booklist\r\n            }\r\n        }\r\n        return patronList;\r\n    }\r\n\r\n\r\n    public Vector<Patron> findPatronsAtZipCode(String zip){\r\n\r\n        String query = (\"SELECT * FROM \" + myTableName + \" WHERE (zip > '\" + zip +\"')\"); //query to find the books older than given date\r\n        Vector allDataRetrieved = getSelectQueryResult(query);\r\n\r\n        if (allDataRetrieved != null) //iterting through result of table query to add to new vector\r\n        {\r\n            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++)\r\n            {\r\n                Properties nextPatron= (Properties)allDataRetrieved.elementAt(cnt); //properties inhereted from Entitybase\r\n                patronList.add(new Patron(nextPatron));//update new booklist\r\n            }\r\n        }\r\n        return patronList;\r\n    }\r\n\r\n    public Vector<Patron> findPatronsWithNameLike(String name){\r\n        // SQL Implementation here\r\n        String query = \"SELECT * FROM \" + myTableName + \" WHERE name LIKE '%\" + name + \"%'\"; //sql query to find books written by same author\r\n        Vector allDataRetrieved = getSelectQueryResult(query);\r\n\r\n        if (allDataRetrieved != null) //iterting through result of table query to add to new vector\r\n        {\r\n            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++)\r\n            {\r\n                Properties nextBook= (Properties)allDataRetrieved.elementAt(cnt); //properties inhereted from Entitybase\r\n                patronList.add(new Book(nextBook));//update booklist\r\n            }\r\n        }\r\n        return patronList;\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/model/PatronCollection.java b/model/PatronCollection.java
--- a/model/PatronCollection.java	(revision f3a077d1363a21889ac628563de9b9e250eae4d5)
+++ b/model/PatronCollection.java	(date 1739400896250)
@@ -28,17 +28,8 @@
         // SQL Implementation here
         String query = ("SELECT * FROM " + myTableName + " WHERE (dateOfBirth < '" + date +"')"); //query to find the books older than given date
         Vector allDataRetrieved = getSelectQueryResult(query);
+        return processPatronData(allDataRetrieved);
 
-        if (allDataRetrieved != null) //iterting through result of table query to add to new vector
-        {
-            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++)
-            {
-                Properties nextPatron= (Properties)allDataRetrieved.elementAt(cnt); //properties inhereted from Entitybase
-
-                patronList.add(new Patron(nextPatron));//update new booklist
-            }
-        }
-        return patronList;
     }
 
 
@@ -46,16 +37,8 @@
         // SQL Implementation here
         String query = ("SELECT * FROM " + myTableName + " WHERE (dateOfBirth > '" + date +"')"); //query to find the books older than given date
         Vector allDataRetrieved = getSelectQueryResult(query);
+        return processPatronData(allDataRetrieved);
 
-        if (allDataRetrieved != null) //iterting through result of table query to add to new vector
-        {
-            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++)
-            {
-                Properties nextPatron= (Properties)allDataRetrieved.elementAt(cnt); //properties inhereted from Entitybase
-                patronList.add(new Patron(nextPatron));//update new booklist
-            }
-        }
-        return patronList;
     }
 
 
@@ -63,29 +46,22 @@
 
         String query = ("SELECT * FROM " + myTableName + " WHERE (zip > '" + zip +"')"); //query to find the books older than given date
         Vector allDataRetrieved = getSelectQueryResult(query);
+        return processPatronData(allDataRetrieved);
 
-        if (allDataRetrieved != null) //iterting through result of table query to add to new vector
-        {
-            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++)
-            {
-                Properties nextPatron= (Properties)allDataRetrieved.elementAt(cnt); //properties inhereted from Entitybase
-                patronList.add(new Patron(nextPatron));//update new booklist
-            }
-        }
-        return patronList;
     }
 
     public Vector<Patron> findPatronsWithNameLike(String name){
         // SQL Implementation here
         String query = "SELECT * FROM " + myTableName + " WHERE name LIKE '%" + name + "%'"; //sql query to find books written by same author
         Vector allDataRetrieved = getSelectQueryResult(query);
+        return processPatronData(allDataRetrieved);
+    }
 
-        if (allDataRetrieved != null) //iterting through result of table query to add to new vector
-        {
-            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++)
-            {
-                Properties nextBook= (Properties)allDataRetrieved.elementAt(cnt); //properties inhereted from Entitybase
-                patronList.add(new Book(nextBook));//update booklist
+    private Vector<Patron> processPatronData(Vector<Patron> allDataRetrieved) {
+        if (allDataRetrieved != null) {
+            for (int cnt = 0; cnt < allDataRetrieved.size(); cnt++) {
+                Properties nextPatron = (Properties) allDataRetrieved.elementAt(cnt);
+                patronList.add(new Patron(nextPatron));
             }
         }
         return patronList;
